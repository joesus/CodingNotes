<% content_for :sidebar do %>

<div class="col-md-3" id="sidebar">
	<div class="bs-sidebar hidden-print affix" role="complementary" style>
		<ul class="nav bs-sidenav" id="spyOnThis">
			<li><%= link_to "Ruby Things", "#" %>
				<ul class="nav">
					<li class><%= link_to "Getting Started", "#gettingstarted" %></li>
					<li class><%= link_to "Devise", "#devise" %></li>
					<li class><%= link_to "RVM Gemsets", "#rvm" %></li>
				</ul>
			</li>
		</ul>
	</div>
</div>
<% end %>

<div class="page-header">
	<h1>Ruby Things
	<br>
		<small>
			If you've never used Ruby on Rails before you'll want to utilize some of the great resources out there.
		</small>
	</h1>
</div>		

<ul>
	<li>Codeacademy is a great place to learn the foundation of the Ruby language. This is essential.</li>
<pre>
<%= link_to "Codeacademy Ruby Track", "http://www.codecademy.com/tracks/ruby" %>
</pre>
	<li>Once you have the foundations of the language down, I would check out The Michael Hartl Ruby on Rails Tutorial.</li>
<pre>
<%= link_to "Hartl Tutorial", "http://ruby.railstutorial.org/ruby-on-rails-tutorial-book" %>
</pre>
	<li>The github repository for the sample_app is a great way to check your work as you go through the tutorial. It helped me gain clarity in areas where the tutorial was a bit vague.</li>
<pre>
<%= link_to "Hartl Tutorial Github Repo", "https://github.com/railstutorial/sample_app_rails_4" %>
</pre>
	<li>You may have questions about the difference between Rails 3 and Rails 4. Here's a nice explanation.</li>
<pre>
<%= link_to "RailsApps Project - Updating Rails", "http://railsapps.github.io/updating-rails.html" %>
</pre>
	<li>The Ruby on Rails API is often the best place to start when you have a questions about rails. It's well laid-out and has saved me a thousand times.</li>
<pre>
<%= link_to "Ruby on Rails API", "http://api.rubyonrails.org/" %>
</pre>
	<li>When the questions is closer related to Ruby than to Rails, I usually check out the language documentation.</li>
<pre>
<%= link_to "Ruby-doc.org", "http://www.ruby-doc.org/" %>
</pre>
	<li>This is a bit random, but I found this explanation of hashes to be really helpful when I was just starting out.</li>
<pre>
<%= link_to "Hashes vs Arrays", "http://www.codecademy.com/forum_questions/51c48cd8282ae399bb001459" %>
</pre>
</ul>


<h2 id="devise">Devise</h2>
	<p class="lead">Devise is a great tool that...</p>
	<ul>
		<li>Here's a walkthrough for setting up user authentication with Devise for a Rails 3 app. It's really helpful.</li>
<pre>
<%= link_to "Devise Walkthrough", "https://github.com/fortuity/rails3-subdomain-devise/wiki/Tutorial-%28Walkthrough%29" %>
</pre>
		<li>The official Devise Wiki is also a really useful tool for sorting through your options.</li>
<pre>
<%= link_to "Devise Wiki", "https://github.com/plataformatec/devise/wiki" %>
</pre>
		<li>To mess with your views manually, check out this <%= link_to "stackoverflow post", "http://stackoverflow.com/questions/3546289/override-devise-registrations-controller" %>. I found success with the solution below.</li>
<pre>
$ rails generate devise:views
</pre>
	</ul>

<h2 id="rvm">Ruby Version Manager</h2>
	<ul>
		<li>Managing your default gemsets through rvm can save a lot of time.</li>
<pre>
<%= link_to "RVM Gemsets", "http://rvm.io/gemsets" %>
</pre>
	</ul>

<h2 id="jqueryrails">jQuery with Ruby on Rails</h2>
	<ul>
		<li>Make sure you have the right gems. I use:</li>
<pre>
gem 'jquery-turbolinks'
gem 'jquery-rails', '2.2.1'
gem 'jquery-ui-rails'
</pre>
		<li>The order of items in your manifest is extremely important. Open <code>application.js</code> and copy the following.</li>
<pre>
//= require jquery
//= require jquery.turbolinks
//= require jquery_ujs
//= require jquery.ui.all
//= require turbolinks
//= require_tree .
</pre>
		<li>There are a few ways to get your scripts to load with turbolinks. As far as I've seen, none of them work perfectly but you can largely manage to do what you need. <%= link_to "stackoverflow post", "http://stackoverflow.com/questions/18770517/rails-4-how-to-use-document-ready-with-turbo-links", target: "blank" %></li>
		<li>I prefer the strategy of defining a function called ready, then firing it below the script:</li>
<pre>
var ready;
ready = function() {
	bunch of code...
};

$(document).ready(ready);
$(document).on('page:load', ready);
</pre>
		<li>This isn't a perfect solution (it doesn't handle images well. Specifically I had a situation where a script required an image to load before it could run successfully.) so as soon as I find a better method I'll post it here. 
		</li>
		<li>Update! Found a better Method!</li>
<pre>
var ready;
ready = function() {
	bunch of code...
};

$(window).load(function() {
    ready();
});
</pre>
		<li>This works way better. See my <%= link_to "post", root_path(anchor: "12-18-13") %> about it.</li>
</ul>










