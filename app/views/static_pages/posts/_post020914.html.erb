<article class="blog-post" id="02-09-14">
	<p class="lead">I GOT TO ANSWER SOMETHING ON SO!!! - <time datetime="2014-02-09">02/09/14</time></p>
	<p>I was reading up on google's Rich snippets. They're that little bit of text you see under the search result. I checked out what mine looks like, by searching the url with the 'site:' prefix, and I realized that mine was lacking.
	</p>

<pre>
<%= image_tag "JoeProGoogleSearch.png" %>
</pre> 

	<p>The Google Webmaster Tools suggests using MicroData in your page to help people find information about your site from the search engine. More info <%= link_to "here.", "https://support.google.com/webmasters/answer/176035?hl=en&ref_topic=1088472", target: "blank" %>
	</p>

	<p>So I was going through adding MicroData everywhere because that's what google wants me to do, and I realized that I had no idea how to get an <code>itemprop="value"</code> into a rails link.</p>

	<p>The few stackoverflow posts on the issue suggested using a block to pass in the span like so:</p>

<pre>
<span><</span>%= link_to(about_path, html_options = {itemprop: "url"}) do %>
  <span itemprop="title">About</span>
<span><</span>% end %>
</pre>

	<p>This seemed really dirty, with a lot of extra code for something so simple. Then I remembered the html_safe, which allowed me to embed the html in my rails helper.</p>

<pre>
<span><</span>%= link_to("<span><</span>span itemprop='title'>About<span><</span>/span>".html_safe, about_path, html_options = {itemprop: "url"}) %>
</pre>

	<p>Then I realized I could clean it up even more by using a <code>content_tag</code></p>

<pre>
<span><</span>%= link_to(content_tag(:span, "About", itemprop:"title"), about_path, html_options = {itemprop: "url"}) %>
</pre>	
	<p>It was very exciting to be able to post this answer on <%= link_to "stackoverflow", "http://stackoverflow.com/questions/7563911/adding-span-tag-in-rails-link-to/21654295#21654295", target: "blank" %>. The next step is to get back to figuring out Microdata.</p>
</article>




